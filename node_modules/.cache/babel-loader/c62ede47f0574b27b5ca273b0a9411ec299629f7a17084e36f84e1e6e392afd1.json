{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Desktop\\\\javascript projects\\\\my-music-app\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport \"./Player.css\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport chillHop from \"../data\"; // Adjust the import based on your data file's location\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [songProgress, setSongProgress] = useState(0);\n  const audioRef = useRef(null);\n  const songs = chillHop();\n\n  // Handles updating the song progress\n  const onTimeUpdate = () => {\n    const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n    setSongProgress(progress);\n  };\n\n  // Toggles play/pause\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (!isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  };\n\n  // Plays the next song\n  const playNextSong = () => {\n    setCurrentSongIndex(prevIndex => (prevIndex + 1) % songs.length);\n  };\n\n  // Plays the previous song\n  const playPreviousSong = () => {\n    setCurrentSongIndex(prevIndex => (prevIndex - 1 + songs.length) % songs.length);\n  };\n\n  // Effect for auto-play when the song changes\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  }, [currentSongIndex, isPlaying]);\n\n  // JSX for the player component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [songs[currentSongIndex].name, \" - \", songs[currentSongIndex].artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayPause,\n      children: isPlaying ? \"Pause\" : \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playPreviousSong,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playNextSong,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: songs[currentSongIndex].audio,\n      onTimeUpdate: onTimeUpdate,\n      onEnded: playNextSong // Automatically play next song when the current one ends\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Progress: \", songProgress.toFixed(2), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"7fz+2Qnxuu68QdmZ1knlwnjeSzc=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","chillHop","jsxDEV","_jsxDEV","Player","_s","isPlaying","setIsPlaying","currentSongIndex","setCurrentSongIndex","songProgress","setSongProgress","audioRef","songs","onTimeUpdate","progress","current","currentTime","duration","togglePlayPause","play","pause","playNextSong","prevIndex","length","playPreviousSong","children","name","artist","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","src","audio","onEnded","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/felip/Desktop/javascript projects/my-music-app/src/components/Player.js"],"sourcesContent":["import \"./Player.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport chillHop from \"../data\"; // Adjust the import based on your data file's location\r\n\r\nconst Player = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const [songProgress, setSongProgress] = useState(0);\r\n  const audioRef = useRef(null);\r\n  const songs = chillHop();\r\n\r\n  // Handles updating the song progress\r\n  const onTimeUpdate = () => {\r\n    const progress =\r\n      (audioRef.current.currentTime / audioRef.current.duration) * 100;\r\n    setSongProgress(progress);\r\n  };\r\n\r\n  // Toggles play/pause\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n    if (!isPlaying) {\r\n      audioRef.current.play();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  };\r\n\r\n  // Plays the next song\r\n  const playNextSong = () => {\r\n    setCurrentSongIndex((prevIndex) => (prevIndex + 1) % songs.length);\r\n  };\r\n\r\n  // Plays the previous song\r\n  const playPreviousSong = () => {\r\n    setCurrentSongIndex(\r\n      (prevIndex) => (prevIndex - 1 + songs.length) % songs.length\r\n    );\r\n  };\r\n\r\n  // Effect for auto-play when the song changes\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  }, [currentSongIndex, isPlaying]);\r\n\r\n  // JSX for the player component\r\n  return (\r\n    <div>\r\n      <h3>\r\n        {songs[currentSongIndex].name} - {songs[currentSongIndex].artist}\r\n      </h3>\r\n      <button onClick={togglePlayPause}>{isPlaying ? \"Pause\" : \"Play\"}</button>\r\n      <button onClick={playPreviousSong}>Previous</button>\r\n      <button onClick={playNextSong}>Next</button>\r\n      <audio\r\n        ref={audioRef}\r\n        src={songs[currentSongIndex].audio}\r\n        onTimeUpdate={onTimeUpdate}\r\n        onEnded={playNextSong} // Automatically play next song when the current one ends\r\n      ></audio>\r\n      <div>Progress: {songProgress.toFixed(2)}%</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}