{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Desktop\\\\javascript projects\\\\my-music-app\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport chillHop from \"../data\"; // Adjust this import based on your data file's location\nimport \"./Player.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [songProgress, setSongProgress] = useState(0);\n  const audioRef = useRef(null);\n  const songs = chillHop();\n  const onTimeUpdate = () => {\n    if (audioRef.current) {\n      const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n      setSongProgress(progress);\n    }\n  };\n  const onLoadedMetadata = () => {\n    if (audioRef.current) {\n      setSongProgress(audioRef.current.currentTime / audioRef.current.duration * 100);\n    }\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const playNextSong = () => {\n    if (currentSongIndex < songs.length - 1) {\n      setCurrentSongIndex(currentSongIndex + 1);\n    } else {\n      setCurrentSongIndex(0);\n    }\n  };\n  const playPrevSong = () => {\n    if (currentSongIndex > 0) {\n      setCurrentSongIndex(currentSongIndex - 1);\n    } else {\n      setCurrentSongIndex(songs.length - 1);\n    }\n  };\n  useEffect(() => {\n    if (isPlaying && audioRef.current) {\n      audioRef.current.play();\n    } else if (!isPlaying && audioRef.current) {\n      audioRef.current.pause();\n    }\n  }, [isPlaying, currentSongIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-song\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: songs[currentSongIndex].cover,\n        alt: songs[currentSongIndex].name,\n        className: \"current-song-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"current-song-name\",\n        children: songs[currentSongIndex].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"current-song-artist\",\n        children: songs[currentSongIndex].artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playPrevSong,\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playNextSong,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${songProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: songs[currentSongIndex].audio,\n      onLoadedMetadata: onLoadedMetadata,\n      onTimeUpdate: onTimeUpdate,\n      onEnded: playNextSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"7fz+2Qnxuu68QdmZ1knlwnjeSzc=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","chillHop","jsxDEV","_jsxDEV","Player","_s","isPlaying","setIsPlaying","currentSongIndex","setCurrentSongIndex","songProgress","setSongProgress","audioRef","songs","onTimeUpdate","current","progress","currentTime","duration","onLoadedMetadata","togglePlayPause","playNextSong","length","playPrevSong","play","pause","className","children","src","cover","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","artist","onClick","style","width","ref","audio","onEnded","_c","$RefreshReg$"],"sources":["C:/Users/felip/Desktop/javascript projects/my-music-app/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport chillHop from \"../data\"; // Adjust this import based on your data file's location\r\nimport \"./Player.css\";\r\n\r\nconst Player = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const [songProgress, setSongProgress] = useState(0);\r\n  const audioRef = useRef(null);\r\n  const songs = chillHop();\r\n\r\n  const onTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const progress =\r\n        (audioRef.current.currentTime / audioRef.current.duration) * 100;\r\n      setSongProgress(progress);\r\n    }\r\n  };\r\n\r\n  const onLoadedMetadata = () => {\r\n    if (audioRef.current) {\r\n      setSongProgress(\r\n        (audioRef.current.currentTime / audioRef.current.duration) * 100\r\n      );\r\n    }\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const playNextSong = () => {\r\n    if (currentSongIndex < songs.length - 1) {\r\n      setCurrentSongIndex(currentSongIndex + 1);\r\n    } else {\r\n      setCurrentSongIndex(0);\r\n    }\r\n  };\r\n\r\n  const playPrevSong = () => {\r\n    if (currentSongIndex > 0) {\r\n      setCurrentSongIndex(currentSongIndex - 1);\r\n    } else {\r\n      setCurrentSongIndex(songs.length - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying && audioRef.current) {\r\n      audioRef.current.play();\r\n    } else if (!isPlaying && audioRef.current) {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying, currentSongIndex]);\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"current-song\">\r\n        <img\r\n          src={songs[currentSongIndex].cover}\r\n          alt={songs[currentSongIndex].name}\r\n          className=\"current-song-cover\"\r\n        />\r\n        <h2 className=\"current-song-name\">{songs[currentSongIndex].name}</h2>\r\n        <h3 className=\"current-song-artist\">\r\n          {songs[currentSongIndex].artist}\r\n        </h3>\r\n      </div>\r\n      <div className=\"player-controls\">\r\n        <button onClick={playPrevSong}>&lt;&lt;</button>\r\n        <button onClick={togglePlayPause}>\r\n          {isPlaying ? \"Pause\" : \"Play\"}\r\n        </button>\r\n        <button onClick={playNextSong}>&gt;&gt;</button>\r\n      </div>\r\n      <div className=\"progress-container\">\r\n        <div className=\"progress-bar\">\r\n          <div className=\"progress\" style={{ width: `${songProgress}%` }}></div>\r\n        </div>\r\n        <div className=\"progress-time\">\r\n          <span>{/* Current time here */}</span>\r\n          <span>{/* Duration here */}</span>\r\n        </div>\r\n      </div>\r\n      <audio\r\n        ref={audioRef}\r\n        src={songs[currentSongIndex].audio}\r\n        onLoadedMetadata={onLoadedMetadata}\r\n        onTimeUpdate={onTimeUpdate}\r\n        onEnded={playNextSong}\r\n      ></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}