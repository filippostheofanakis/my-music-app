{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import chillHop from\"../data\";// Adjust this import based on your data file's location\nimport\"./Player.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Player=_ref=>{let{currentSong,currentSongIndex,setCurrentSongIndex,songs}=_ref;const[isPlaying,setIsPlaying]=useState(false);const[songProgress,setSongProgress]=useState(0);const[currentTime,setCurrentTime]=useState(0);const[duration,setDuration]=useState(0);const audioRef=useRef(null);const[remainingTime,setRemainingTime]=useState(0);const onTimeUpdate=()=>{if(audioRef.current){const currentTime=audioRef.current.currentTime;const duration=audioRef.current.duration;if(!isNaN(currentTime)){setCurrentTime(currentTime);setRemainingTime(duration-currentTime);setSongProgress(currentTime/duration*100);}}};const onLoadedMetadata=()=>{if(audioRef.current&&!isNaN(audioRef.current.duration)){setDuration(audioRef.current.duration);}};const togglePlayPause=()=>{setIsPlaying(!isPlaying);};const setSeekBar=e=>{const width=e.target.clientWidth;// Get the width of the progress bar\nconst clickX=e.nativeEvent.offsetX;// Get the horizontal point of the click within the bar\nconst duration=audioRef.current.duration;// Total duration of the song\naudioRef.current.currentTime=clickX/width*duration;// Set the current time\n};const playNextSong=()=>{setCurrentSongIndex(prevIndex=>(prevIndex+1)%songs.length);resetPlayback();};const playPrevSong=()=>{setCurrentSongIndex(prevIndex=>{return prevIndex===0?songs.length-1:prevIndex-1;});resetPlayback();};const resetPlayback=()=>{// Reset the current time and progress bar\nsetCurrentTime(0);setSongProgress(0);setRemainingTime(duration);// If using a progress bar element, you may need to reset its value directly as well\nif(audioRef.current){audioRef.current.currentTime=0;}};useEffect(()=>{if(isPlaying&&audioRef.current){audioRef.current.play();}else if(audioRef.current){audioRef.current.pause();}},[isPlaying]);useEffect(()=>{if(audioRef.current){audioRef.current.src=currentSong.audio;audioRef.current.load();resetPlayback();// Reset the playback whenever the song changes\nif(isPlaying){setTimeout(()=>audioRef.current.play(),100);// A slight delay to ensure the new song loads\n}}},[currentSong]);function formatTime(seconds){if(isNaN(seconds)){return\"0:00\";}return\"\".concat(Math.floor(seconds/60),\":\").concat(\"0\".concat(Math.floor(seconds%60)).slice(-2));}return/*#__PURE__*/_jsxs(\"div\",{className:\"player\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"current-song\",children:[/*#__PURE__*/_jsx(\"img\",{src:currentSong.cover,alt:currentSong.name,className:\"current-song-cover\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"current-song-name\",children:currentSong.name}),/*#__PURE__*/_jsx(\"h3\",{className:\"current-song-artist\",children:currentSong.artist})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:playPrevSong,className:\"control-button\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-step-backward\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:togglePlayPause,className:\"control-button\",children:isPlaying?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-pause\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-play\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:playNextSong,className:\"control-button\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-step-forward\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",onClick:setSeekBar,children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress\",style:{width:\"\".concat(songProgress,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-time\",children:[/*#__PURE__*/_jsx(\"span\",{children:!isNaN(currentTime)?formatTime(currentTime):\"0:00\"}),/*#__PURE__*/_jsx(\"span\",{children:!isNaN(remainingTime)?\"-\".concat(formatTime(remainingTime)):\"0:00\"})]})]}),/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,src:currentSong.audio,onLoadedMetadata:onLoadedMetadata,onTimeUpdate:onTimeUpdate,onEnded:playNextSong})]});};export default Player;","map":{"version":3,"names":["React","useState","useRef","useEffect","chillHop","jsx","_jsx","jsxs","_jsxs","Player","_ref","currentSong","currentSongIndex","setCurrentSongIndex","songs","isPlaying","setIsPlaying","songProgress","setSongProgress","currentTime","setCurrentTime","duration","setDuration","audioRef","remainingTime","setRemainingTime","onTimeUpdate","current","isNaN","onLoadedMetadata","togglePlayPause","setSeekBar","e","width","target","clientWidth","clickX","nativeEvent","offsetX","playNextSong","prevIndex","length","resetPlayback","playPrevSong","play","pause","src","audio","load","setTimeout","formatTime","seconds","concat","Math","floor","slice","className","children","cover","alt","name","artist","onClick","style","ref","onEnded"],"sources":["C:/Users/felip/Desktop/javascript projects/my-music-app/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport chillHop from \"../data\"; // Adjust this import based on your data file's location\r\nimport \"./Player.css\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  currentSongIndex,\r\n  setCurrentSongIndex,\r\n  songs,\r\n}) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songProgress, setSongProgress] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const audioRef = useRef(null);\r\n  const [remainingTime, setRemainingTime] = useState(0);\r\n\r\n  const onTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const currentTime = audioRef.current.currentTime;\r\n      const duration = audioRef.current.duration;\r\n      if (!isNaN(currentTime)) {\r\n        setCurrentTime(currentTime);\r\n        setRemainingTime(duration - currentTime);\r\n        setSongProgress((currentTime / duration) * 100);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onLoadedMetadata = () => {\r\n    if (audioRef.current && !isNaN(audioRef.current.duration)) {\r\n      setDuration(audioRef.current.duration);\r\n    }\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const setSeekBar = (e) => {\r\n    const width = e.target.clientWidth; // Get the width of the progress bar\r\n    const clickX = e.nativeEvent.offsetX; // Get the horizontal point of the click within the bar\r\n    const duration = audioRef.current.duration; // Total duration of the song\r\n    audioRef.current.currentTime = (clickX / width) * duration; // Set the current time\r\n  };\r\n\r\n  const playNextSong = () => {\r\n    setCurrentSongIndex((prevIndex) => (prevIndex + 1) % songs.length);\r\n    resetPlayback();\r\n  };\r\n\r\n  const playPrevSong = () => {\r\n    setCurrentSongIndex((prevIndex) => {\r\n      return prevIndex === 0 ? songs.length - 1 : prevIndex - 1;\r\n    });\r\n    resetPlayback();\r\n  };\r\n\r\n  const resetPlayback = () => {\r\n    // Reset the current time and progress bar\r\n    setCurrentTime(0);\r\n    setSongProgress(0);\r\n    setRemainingTime(duration);\r\n    // If using a progress bar element, you may need to reset its value directly as well\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying && audioRef.current) {\r\n      audioRef.current.play();\r\n    } else if (audioRef.current) {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.src = currentSong.audio;\r\n      audioRef.current.load();\r\n      resetPlayback(); // Reset the playback whenever the song changes\r\n      if (isPlaying) {\r\n        setTimeout(() => audioRef.current.play(), 100); // A slight delay to ensure the new song loads\r\n      }\r\n    }\r\n  }, [currentSong]);\r\n\r\n  function formatTime(seconds) {\r\n    if (isNaN(seconds)) {\r\n      return \"0:00\";\r\n    }\r\n    return `${Math.floor(seconds / 60)}:${`0${Math.floor(seconds % 60)}`.slice(\r\n      -2\r\n    )}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"current-song\">\r\n        <img\r\n          src={currentSong.cover}\r\n          alt={currentSong.name}\r\n          className=\"current-song-cover\"\r\n        />\r\n        <h2 className=\"current-song-name\">{currentSong.name}</h2>\r\n        <h3 className=\"current-song-artist\">{currentSong.artist}</h3>\r\n      </div>\r\n      <div className=\"player-controls\">\r\n        <button onClick={playPrevSong} className=\"control-button\">\r\n          <i className=\"fas fa-step-backward\"></i>\r\n        </button>\r\n        <button onClick={togglePlayPause} className=\"control-button\">\r\n          {isPlaying ? (\r\n            <i className=\"fas fa-pause\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-play\"></i>\r\n          )}\r\n        </button>\r\n        <button onClick={playNextSong} className=\"control-button\">\r\n          <i className=\"fas fa-step-forward\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"progress-container\" onClick={setSeekBar}>\r\n        <div className=\"progress-bar\">\r\n          <div className=\"progress\" style={{ width: `${songProgress}%` }}></div>\r\n        </div>\r\n        <div className=\"progress-time\">\r\n          <span>{!isNaN(currentTime) ? formatTime(currentTime) : \"0:00\"}</span>\r\n          <span>\r\n            {!isNaN(remainingTime) ? `-${formatTime(remainingTime)}` : \"0:00\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <audio\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n        onLoadedMetadata={onLoadedMetadata}\r\n        onTimeUpdate={onTimeUpdate}\r\n        onEnded={playNextSong}\r\n      ></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}