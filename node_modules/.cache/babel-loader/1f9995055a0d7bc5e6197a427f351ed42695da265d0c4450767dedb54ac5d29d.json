{"ast":null,"code":"// SongList.js\nimport React,{useState,useEffect}from\"react\";import\"./SongList.css\";import chillHop from\"../data\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SongList=_ref=>{let{currentSongIndex,handleSongSelect}=_ref;const[songs,setSongs]=useState([]);// State to store the fetched songs\nuseEffect(()=>{// Fetch songs when the component mounts\nfetch(\"http://localhost:5000/songs\")// Make a GET request to the backend\n.then(response=>{if(!response.ok){throw new Error(\"Network response was not ok\");}return response.json();// Parse the response body as JSON\n}).then(data=>setSongs(data))// Update the 'songs' state with the fetched data\n.catch(error=>console.error(\"Error fetching songs:\",error));// Log any errors\n},[]);// Empty dependency array ensures this effect runs only once on mount\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"song-list\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"library-title\",children:\"Library\"}),songs.map((song,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"song-list-item \".concat(index===currentSongIndex?\"active\":\"\"),onClick:()=>handleSongSelect(index),children:[/*#__PURE__*/_jsx(\"img\",{src:song.cover,alt:song.name,className:\"song-cover\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"song-description\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"song-title\",children:song.name}),/*#__PURE__*/_jsx(\"p\",{className:\"song-artist\",children:song.artist})]})]},song.id))]});};export default SongList;","map":{"version":3,"names":["React","useState","useEffect","chillHop","jsx","_jsx","jsxs","_jsxs","SongList","_ref","currentSongIndex","handleSongSelect","songs","setSongs","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","map","song","index","concat","onClick","src","cover","alt","name","artist","id"],"sources":["C:/Users/felip/Desktop/javascript projects/my-music-app/src/components/SongList.js"],"sourcesContent":["// SongList.js\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./SongList.css\";\r\nimport chillHop from \"../data\";\r\n\r\nconst SongList = ({ currentSongIndex, handleSongSelect }) => {\r\n  const [songs, setSongs] = useState([]); // State to store the fetched songs\r\n\r\n  useEffect(() => {\r\n    // Fetch songs when the component mounts\r\n    fetch(\"http://localhost:5000/songs\") // Make a GET request to the backend\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json(); // Parse the response body as JSON\r\n      })\r\n      .then((data) => setSongs(data)) // Update the 'songs' state with the fetched data\r\n      .catch((error) => console.error(\"Error fetching songs:\", error)); // Log any errors\r\n  }, []); // Empty dependency array ensures this effect runs only once on mount\r\n\r\n  return (\r\n    <div className=\"song-list\">\r\n      <h2 className=\"library-title\">Library</h2>\r\n\r\n      {songs.map((song, index) => (\r\n        <div\r\n          className={`song-list-item ${\r\n            index === currentSongIndex ? \"active\" : \"\"\r\n          }`}\r\n          key={song.id}\r\n          onClick={() => handleSongSelect(index)}\r\n        >\r\n          <img src={song.cover} alt={song.name} className=\"song-cover\" />\r\n          <div className=\"song-description\">\r\n            <h3 className=\"song-title\">{song.name}</h3>\r\n            <p className=\"song-artist\">{song.artist}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongList;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD,MAAO,gBAAgB,CACvB,MAAO,CAAAC,QAAQ,KAAM,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/B,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAA4C,IAA3C,CAAEC,gBAAgB,CAAEC,gBAAiB,CAAC,CAAAF,IAAA,CACtD,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAE;AAExCC,SAAS,CAAC,IAAM,CACd;AACAY,KAAK,CAAC,6BAA6B,CAAE;AAAA,CAClCC,IAAI,CAAEC,QAAQ,EAAK,CAClB,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,MAAO,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAE;AAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,EAAKP,QAAQ,CAACO,IAAI,CAAC,CAAE;AAAA,CAC/BC,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAAC,CAAE;AACtE,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACEf,KAAA,QAAKiB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBpB,IAAA,OAAImB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,SAAO,CAAI,CAAC,CAEzCb,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACrBrB,KAAA,QACEiB,SAAS,mBAAAK,MAAA,CACPD,KAAK,GAAKlB,gBAAgB,CAAG,QAAQ,CAAG,EAAE,CACzC,CAEHoB,OAAO,CAAEA,CAAA,GAAMnB,gBAAgB,CAACiB,KAAK,CAAE,CAAAH,QAAA,eAEvCpB,IAAA,QAAK0B,GAAG,CAAEJ,IAAI,CAACK,KAAM,CAACC,GAAG,CAAEN,IAAI,CAACO,IAAK,CAACV,SAAS,CAAC,YAAY,CAAE,CAAC,cAC/DjB,KAAA,QAAKiB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BpB,IAAA,OAAImB,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEE,IAAI,CAACO,IAAI,CAAK,CAAC,cAC3C7B,IAAA,MAAGmB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEE,IAAI,CAACQ,MAAM,CAAI,CAAC,EACzC,CAAC,GAPDR,IAAI,CAACS,EAQP,CACN,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAA5B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}