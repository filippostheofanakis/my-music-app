{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Desktop\\\\javascript projects\\\\my-music-app\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport chillHop from \"../data\";\nimport \"/Player.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [songProgress, setSongProgress] = useState(0);\n  const audioRef = useRef(null);\n  const songs = chillHop();\n  const onTimeUpdate = () => {\n    const progress = audioRef.current.currentTime / audioRef.current.duration * 100;\n    setSongProgress(progress);\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (!isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  };\n  const playNextSong = () => {\n    setCurrentSongIndex(prevIndex => (prevIndex + 1) % songs.length);\n  };\n  const playPreviousSong = () => {\n    setCurrentSongIndex(prevIndex => (prevIndex - 1 + songs.length) % songs.length);\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  }, [currentSongIndex, isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: songs[currentSongIndex].cover,\n      alt: songs[currentSongIndex].name,\n      className: \"album-cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"song-name\",\n        children: songs[currentSongIndex].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"song-artist\",\n        children: songs[currentSongIndex].artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playPreviousSong,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playNextSong,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${songProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: songs[currentSongIndex].audio,\n      onTimeUpdate: onTimeUpdate,\n      onEnded: playNextSong,\n      onLoadedMetadata: onTimeUpdate // to set initial progress on song load\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"7fz+2Qnxuu68QdmZ1knlwnjeSzc=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","chillHop","jsxDEV","_jsxDEV","Player","_s","isPlaying","setIsPlaying","currentSongIndex","setCurrentSongIndex","songProgress","setSongProgress","audioRef","songs","onTimeUpdate","progress","current","currentTime","duration","togglePlayPause","play","pause","playNextSong","prevIndex","length","playPreviousSong","className","children","src","cover","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","artist","onClick","style","width","ref","audio","onEnded","onLoadedMetadata","_c","$RefreshReg$"],"sources":["C:/Users/felip/Desktop/javascript projects/my-music-app/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport chillHop from \"../data\";\r\nimport \"/Player.css\";\r\n\r\nconst Player = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const [songProgress, setSongProgress] = useState(0);\r\n  const audioRef = useRef(null);\r\n  const songs = chillHop();\r\n\r\n  const onTimeUpdate = () => {\r\n    const progress =\r\n      (audioRef.current.currentTime / audioRef.current.duration) * 100;\r\n    setSongProgress(progress);\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n    if (!isPlaying) {\r\n      audioRef.current.play();\r\n    } else {\r\n      audioRef.current.pause();\r\n    }\r\n  };\r\n\r\n  const playNextSong = () => {\r\n    setCurrentSongIndex((prevIndex) => (prevIndex + 1) % songs.length);\r\n  };\r\n\r\n  const playPreviousSong = () => {\r\n    setCurrentSongIndex(\r\n      (prevIndex) => (prevIndex - 1 + songs.length) % songs.length\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  }, [currentSongIndex, isPlaying]);\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <img\r\n        src={songs[currentSongIndex].cover}\r\n        alt={songs[currentSongIndex].name}\r\n        className=\"album-cover\"\r\n      />\r\n      <div className=\"song-info\">\r\n        <h2 className=\"song-name\">{songs[currentSongIndex].name}</h2>\r\n        <h3 className=\"song-artist\">{songs[currentSongIndex].artist}</h3>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button onClick={playPreviousSong}>Prev</button>\r\n        <button onClick={togglePlayPause}>\r\n          {isPlaying ? \"Pause\" : \"Play\"}\r\n        </button>\r\n        <button onClick={playNextSong}>Next</button>\r\n      </div>\r\n      <div className=\"progress-container\">\r\n        <div className=\"progress-bar\">\r\n          <div className=\"progress\" style={{ width: `${songProgress}%` }}></div>\r\n        </div>\r\n      </div>\r\n      <audio\r\n        ref={audioRef}\r\n        src={songs[currentSongIndex].audio}\r\n        onTimeUpdate={onTimeUpdate}\r\n        onEnded={playNextSong}\r\n        onLoadedMetadata={onTimeUpdate} // to set initial progress on song load\r\n      ></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}