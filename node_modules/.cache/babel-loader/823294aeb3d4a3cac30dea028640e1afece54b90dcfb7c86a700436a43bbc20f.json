{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Desktop\\\\javascript projects\\\\my-music-app\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport chillHop from \"../data\"; // Adjust this import based on your data file's location\nimport \"./Player.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  currentSong,\n  currentSongIndex,\n  setCurrentSongIndex,\n  songs\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songProgress, setSongProgress] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n  const [remainingTime, setRemainingTime] = useState(0);\n  const onTimeUpdate = () => {\n    if (audioRef.current) {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      if (!isNaN(currentTime)) {\n        setCurrentTime(currentTime);\n        setRemainingTime(duration - currentTime);\n        setSongProgress(currentTime / duration * 100);\n      }\n    }\n  };\n  const onLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration && !isNaN(audioRef.current.duration));\n    }\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const setSeekBar = e => {\n    const width = e.target.clientWidth; // Get the width of the progress bar\n    const clickX = e.nativeEvent.offsetX; // Get the horizontal point of the click within the bar\n    const duration = audioRef.current.duration; // Total duration of the song\n    audioRef.current.currentTime = clickX / width * duration; // Set the current time\n  };\n  const playNextSong = () => {\n    setCurrentSongIndex(prevIndex => {\n      // If we're at the end of the playlist, go back to the start\n      const newIndex = (prevIndex + 1) % songs.length;\n      return newIndex;\n    });\n    // Reset the current time\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n      if (isPlaying) {\n        setTimeout(() => {\n          audioRef.current.play();\n        }, 0);\n      }\n    }\n  };\n  const playPrevSong = () => {\n    setCurrentSongIndex(prevIndex => {\n      // If we're at the start of the playlist, go to the end\n      const newIndex = (prevIndex - 1 + songs.length) % songs.length;\n      return newIndex;\n    });\n    // Reset the current time\n    if (audioRef.current) {\n      audioRef.current.currentTime = 0;\n      if (isPlaying) {\n        setTimeout(() => {\n          audioRef.current.play();\n        }, 0);\n      }\n    }\n  };\n  useEffect(() => {\n    if (isPlaying && audioRef.current) {\n      audioRef.current.play();\n    } else if (audioRef.current) {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.src = currentSong.audio;\n      audioRef.current.load();\n      if (isPlaying) {\n        audioRef.current.play();\n      }\n    }\n  }, [currentSong]);\n  function formatTime(seconds) {\n    if (isNaN(seconds)) {\n      return \"0:00\";\n    }\n    return `${Math.floor(seconds / 60)}:${`0${Math.floor(seconds % 60)}`.slice(-2)}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-song\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentSong.cover,\n        alt: currentSong.name,\n        className: \"current-song-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"current-song-name\",\n        children: currentSong.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"current-song-artist\",\n        children: currentSong.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playPrevSong,\n        className: \"control-button\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-step-backward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        className: \"control-button\",\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playNextSong,\n        className: \"control-button\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-step-forward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      onClick: setSeekBar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${songProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: !isNaN(currentTime) ? formatTime(currentTime) : \"0:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: !isNaN(remainingTime) ? `-${formatTime(remainingTime)}` : \"0:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: currentSong.audio,\n      onLoadedMetadata: onLoadedMetadata,\n      onTimeUpdate: onTimeUpdate,\n      onEnded: playNextSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"Jx4uvk90bE3iblvfIbIzAWvTeD8=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","chillHop","jsxDEV","_jsxDEV","Player","currentSong","currentSongIndex","setCurrentSongIndex","songs","_s","isPlaying","setIsPlaying","songProgress","setSongProgress","currentTime","setCurrentTime","duration","setDuration","audioRef","remainingTime","setRemainingTime","onTimeUpdate","current","isNaN","onLoadedMetadata","togglePlayPause","setSeekBar","e","width","target","clientWidth","clickX","nativeEvent","offsetX","playNextSong","prevIndex","newIndex","length","setTimeout","play","playPrevSong","pause","src","audio","load","formatTime","seconds","Math","floor","slice","className","children","cover","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","artist","onClick","style","ref","onEnded","_c","$RefreshReg$"],"sources":["C:/Users/felip/Desktop/javascript projects/my-music-app/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport chillHop from \"../data\"; // Adjust this import based on your data file's location\r\nimport \"./Player.css\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  currentSongIndex,\r\n  setCurrentSongIndex,\r\n  songs,\r\n}) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songProgress, setSongProgress] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const audioRef = useRef(null);\r\n  const [remainingTime, setRemainingTime] = useState(0);\r\n\r\n  const onTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const currentTime = audioRef.current.currentTime;\r\n      const duration = audioRef.current.duration;\r\n      if (!isNaN(currentTime)) {\r\n        setCurrentTime(currentTime);\r\n        setRemainingTime(duration - currentTime);\r\n        setSongProgress((currentTime / duration) * 100);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onLoadedMetadata = () => {\r\n    if (audioRef.current) {\r\n      setDuration(\r\n        audioRef.current.duration && !isNaN(audioRef.current.duration)\r\n      );\r\n    }\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const setSeekBar = (e) => {\r\n    const width = e.target.clientWidth; // Get the width of the progress bar\r\n    const clickX = e.nativeEvent.offsetX; // Get the horizontal point of the click within the bar\r\n    const duration = audioRef.current.duration; // Total duration of the song\r\n    audioRef.current.currentTime = (clickX / width) * duration; // Set the current time\r\n  };\r\n\r\n  const playNextSong = () => {\r\n    setCurrentSongIndex((prevIndex) => {\r\n      // If we're at the end of the playlist, go back to the start\r\n      const newIndex = (prevIndex + 1) % songs.length;\r\n      return newIndex;\r\n    });\r\n    // Reset the current time\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n      if (isPlaying) {\r\n        setTimeout(() => {\r\n          audioRef.current.play();\r\n        }, 0);\r\n      }\r\n    }\r\n  };\r\n\r\n  const playPrevSong = () => {\r\n    setCurrentSongIndex((prevIndex) => {\r\n      // If we're at the start of the playlist, go to the end\r\n      const newIndex = (prevIndex - 1 + songs.length) % songs.length;\r\n      return newIndex;\r\n    });\r\n    // Reset the current time\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n      if (isPlaying) {\r\n        setTimeout(() => {\r\n          audioRef.current.play();\r\n        }, 0);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying && audioRef.current) {\r\n      audioRef.current.play();\r\n    } else if (audioRef.current) {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.src = currentSong.audio;\r\n      audioRef.current.load();\r\n      if (isPlaying) {\r\n        audioRef.current.play();\r\n      }\r\n    }\r\n  }, [currentSong]);\r\n\r\n  function formatTime(seconds) {\r\n    if (isNaN(seconds)) {\r\n      return \"0:00\";\r\n    }\r\n    return `${Math.floor(seconds / 60)}:${`0${Math.floor(seconds % 60)}`.slice(\r\n      -2\r\n    )}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"current-song\">\r\n        <img\r\n          src={currentSong.cover}\r\n          alt={currentSong.name}\r\n          className=\"current-song-cover\"\r\n        />\r\n        <h2 className=\"current-song-name\">{currentSong.name}</h2>\r\n        <h3 className=\"current-song-artist\">{currentSong.artist}</h3>\r\n      </div>\r\n      <div className=\"player-controls\">\r\n        <button onClick={playPrevSong} className=\"control-button\">\r\n          <i className=\"fas fa-step-backward\"></i>\r\n        </button>\r\n        <button onClick={togglePlayPause} className=\"control-button\">\r\n          {isPlaying ? (\r\n            <i className=\"fas fa-pause\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-play\"></i>\r\n          )}\r\n        </button>\r\n        <button onClick={playNextSong} className=\"control-button\">\r\n          <i className=\"fas fa-step-forward\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"progress-container\" onClick={setSeekBar}>\r\n        <div className=\"progress-bar\">\r\n          <div className=\"progress\" style={{ width: `${songProgress}%` }}></div>\r\n        </div>\r\n        <div className=\"progress-time\">\r\n          <span>{!isNaN(currentTime) ? formatTime(currentTime) : \"0:00\"}</span>\r\n          <span>\r\n            {!isNaN(remainingTime) ? `-${formatTime(remainingTime)}` : \"0:00\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <audio\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n        onLoadedMetadata={onLoadedMetadata}\r\n        onTimeUpdate={onTimeUpdate}\r\n        onEnded={playNextSong}\r\n      ></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,SAAS,CAAC,CAAC;AAChC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAC;EACdC,WAAW;EACXC,gBAAgB;EAChBC,mBAAmB;EACnBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMoB,QAAQ,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAErD,MAAMuB,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIH,QAAQ,CAACI,OAAO,EAAE;MACpB,MAAMR,WAAW,GAAGI,QAAQ,CAACI,OAAO,CAACR,WAAW;MAChD,MAAME,QAAQ,GAAGE,QAAQ,CAACI,OAAO,CAACN,QAAQ;MAC1C,IAAI,CAACO,KAAK,CAACT,WAAW,CAAC,EAAE;QACvBC,cAAc,CAACD,WAAW,CAAC;QAC3BM,gBAAgB,CAACJ,QAAQ,GAAGF,WAAW,CAAC;QACxCD,eAAe,CAAEC,WAAW,GAAGE,QAAQ,GAAI,GAAG,CAAC;MACjD;IACF;EACF,CAAC;EAED,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIN,QAAQ,CAACI,OAAO,EAAE;MACpBL,WAAW,CACTC,QAAQ,CAACI,OAAO,CAACN,QAAQ,IAAI,CAACO,KAAK,CAACL,QAAQ,CAACI,OAAO,CAACN,QAAQ,CAC/D,CAAC;IACH;EACF,CAAC;EAED,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5Bd,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMgB,UAAU,GAAIC,CAAC,IAAK;IACxB,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,WAAW,CAAC,CAAC;IACpC,MAAMC,MAAM,GAAGJ,CAAC,CAACK,WAAW,CAACC,OAAO,CAAC,CAAC;IACtC,MAAMjB,QAAQ,GAAGE,QAAQ,CAACI,OAAO,CAACN,QAAQ,CAAC,CAAC;IAC5CE,QAAQ,CAACI,OAAO,CAACR,WAAW,GAAIiB,MAAM,GAAGH,KAAK,GAAIZ,QAAQ,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMkB,YAAY,GAAGA,CAAA,KAAM;IACzB3B,mBAAmB,CAAE4B,SAAS,IAAK;MACjC;MACA,MAAMC,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAC,IAAI3B,KAAK,CAAC6B,MAAM;MAC/C,OAAOD,QAAQ;IACjB,CAAC,CAAC;IACF;IACA,IAAIlB,QAAQ,CAACI,OAAO,EAAE;MACpBJ,QAAQ,CAACI,OAAO,CAACR,WAAW,GAAG,CAAC;MAChC,IAAIJ,SAAS,EAAE;QACb4B,UAAU,CAAC,MAAM;UACfpB,QAAQ,CAACI,OAAO,CAACiB,IAAI,CAAC,CAAC;QACzB,CAAC,EAAE,CAAC,CAAC;MACP;IACF;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBjC,mBAAmB,CAAE4B,SAAS,IAAK;MACjC;MACA,MAAMC,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAC,GAAG3B,KAAK,CAAC6B,MAAM,IAAI7B,KAAK,CAAC6B,MAAM;MAC9D,OAAOD,QAAQ;IACjB,CAAC,CAAC;IACF;IACA,IAAIlB,QAAQ,CAACI,OAAO,EAAE;MACpBJ,QAAQ,CAACI,OAAO,CAACR,WAAW,GAAG,CAAC;MAChC,IAAIJ,SAAS,EAAE;QACb4B,UAAU,CAAC,MAAM;UACfpB,QAAQ,CAACI,OAAO,CAACiB,IAAI,CAAC,CAAC;QACzB,CAAC,EAAE,CAAC,CAAC;MACP;IACF;EACF,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,IAAIQ,QAAQ,CAACI,OAAO,EAAE;MACjCJ,QAAQ,CAACI,OAAO,CAACiB,IAAI,CAAC,CAAC;IACzB,CAAC,MAAM,IAAIrB,QAAQ,CAACI,OAAO,EAAE;MAC3BJ,QAAQ,CAACI,OAAO,CAACmB,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAAC/B,SAAS,CAAC,CAAC;EAEfV,SAAS,CAAC,MAAM;IACd,IAAIkB,QAAQ,CAACI,OAAO,EAAE;MACpBJ,QAAQ,CAACI,OAAO,CAACoB,GAAG,GAAGrC,WAAW,CAACsC,KAAK;MACxCzB,QAAQ,CAACI,OAAO,CAACsB,IAAI,CAAC,CAAC;MACvB,IAAIlC,SAAS,EAAE;QACbQ,QAAQ,CAACI,OAAO,CAACiB,IAAI,CAAC,CAAC;MACzB;IACF;EACF,CAAC,EAAE,CAAClC,WAAW,CAAC,CAAC;EAEjB,SAASwC,UAAUA,CAACC,OAAO,EAAE;IAC3B,IAAIvB,KAAK,CAACuB,OAAO,CAAC,EAAE;MAClB,OAAO,MAAM;IACf;IACA,OAAQ,GAAEC,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAE,IAAI,IAAGC,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAE,EAAC,CAACG,KAAK,CACxE,CAAC,CACH,CAAE,EAAC;EACL;EAEA,oBACE9C,OAAA;IAAK+C,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBhD,OAAA;MAAK+C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhD,OAAA;QACEuC,GAAG,EAAErC,WAAW,CAAC+C,KAAM;QACvBC,GAAG,EAAEhD,WAAW,CAACiD,IAAK;QACtBJ,SAAS,EAAC;MAAoB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFvD,OAAA;QAAI+C,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAE9C,WAAW,CAACiD;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzDvD,OAAA;QAAI+C,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAE9C,WAAW,CAACsD;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACNvD,OAAA;MAAK+C,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BhD,OAAA;QAAQyD,OAAO,EAAEpB,YAAa;QAACU,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eACvDhD,OAAA;UAAG+C,SAAS,EAAC;QAAsB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACTvD,OAAA;QAAQyD,OAAO,EAAEnC,eAAgB;QAACyB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EACzDzC,SAAS,gBACRP,OAAA;UAAG+C,SAAS,EAAC;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAEhCvD,OAAA;UAAG+C,SAAS,EAAC;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAC/B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACTvD,OAAA;QAAQyD,OAAO,EAAE1B,YAAa;QAACgB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eACvDhD,OAAA;UAAG+C,SAAS,EAAC;QAAqB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNvD,OAAA;MAAK+C,SAAS,EAAC,oBAAoB;MAACU,OAAO,EAAElC,UAAW;MAAAyB,QAAA,gBACtDhD,OAAA;QAAK+C,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BhD,OAAA;UAAK+C,SAAS,EAAC,UAAU;UAACW,KAAK,EAAE;YAAEjC,KAAK,EAAG,GAAEhB,YAAa;UAAG;QAAE;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eACNvD,OAAA;QAAK+C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhD,OAAA;UAAAgD,QAAA,EAAO,CAAC5B,KAAK,CAACT,WAAW,CAAC,GAAG+B,UAAU,CAAC/B,WAAW,CAAC,GAAG;QAAM;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrEvD,OAAA;UAAAgD,QAAA,EACG,CAAC5B,KAAK,CAACJ,aAAa,CAAC,GAAI,IAAG0B,UAAU,CAAC1B,aAAa,CAAE,EAAC,GAAG;QAAM;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNvD,OAAA;MACE2D,GAAG,EAAE5C,QAAS;MACdwB,GAAG,EAAErC,WAAW,CAACsC,KAAM;MACvBnB,gBAAgB,EAAEA,gBAAiB;MACnCH,YAAY,EAAEA,YAAa;MAC3B0C,OAAO,EAAE7B;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjD,EAAA,CAvJIL,MAAM;AAAA4D,EAAA,GAAN5D,MAAM;AAyJZ,eAAeA,MAAM;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}