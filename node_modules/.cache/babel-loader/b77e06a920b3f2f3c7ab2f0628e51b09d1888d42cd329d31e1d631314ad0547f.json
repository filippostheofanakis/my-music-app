{"ast":null,"code":"// App.js\nimport React,{useState}from\"react\";import Player from\"./components/Player\";import SongList from\"./components/SongList\";import chillHop from\"./data\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[currentSongIndex,setCurrentSongIndex]=useState(0);const[currentTime,setCurrentTime]=useState(0);const[songProgress,setSongProgress]=useState(0);const songs=chillHop();// Retrieve the songs array\nconst resetPlayback=()=>{// Reset the current time and progress bar\nsetCurrentTime(0);setSongProgress(0);// if (audioRef.current) {\n//   audioRef.current.currentTime = 0;\n// }\n};const handleSongSelect=index=>{setCurrentSongIndex(index);resetPlayback();};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(SongList,{songs:songs,currentSongIndex:currentSongIndex,handleSongSelect:handleSongSelect// Pass the function as a prop here\n}),/*#__PURE__*/_jsx(Player,{currentSong:songs[currentSongIndex],setCurrentSongIndex:setCurrentSongIndex,currentTime:currentTime,setCurrentTime:setCurrentTime,songProgress:songProgress,setSongProgress:setSongProgress,songs:songs})]});}export default App;","map":{"version":3,"names":["React","useState","Player","SongList","chillHop","jsx","_jsx","jsxs","_jsxs","App","currentSongIndex","setCurrentSongIndex","currentTime","setCurrentTime","songProgress","setSongProgress","songs","resetPlayback","handleSongSelect","index","className","children","currentSong"],"sources":["C:/Users/felip/Desktop/javascript projects/my-music-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from \"react\";\nimport Player from \"./components/Player\";\nimport SongList from \"./components/SongList\";\nimport chillHop from \"./data\";\n\nfunction App() {\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [songProgress, setSongProgress] = useState(0);\n  const songs = chillHop(); // Retrieve the songs array\n\n  const resetPlayback = () => {\n    // Reset the current time and progress bar\n    setCurrentTime(0);\n    setSongProgress(0);\n    // if (audioRef.current) {\n    //   audioRef.current.currentTime = 0;\n    // }\n  };\n\n  const handleSongSelect = (index) => {\n    setCurrentSongIndex(index);\n    resetPlayback();\n  };\n\n  return (\n    <div className=\"App\">\n      <SongList\n        songs={songs}\n        currentSongIndex={currentSongIndex}\n        handleSongSelect={handleSongSelect} // Pass the function as a prop here\n      />\n      <Player\n        currentSong={songs[currentSongIndex]}\n        setCurrentSongIndex={setCurrentSongIndex}\n        currentTime={currentTime}\n        setCurrentTime={setCurrentTime}\n        songProgress={songProgress}\n        setSongProgress={setSongProgress}\n        songs={songs}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,QAAQ,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAC3D,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CACnD,KAAM,CAAAe,KAAK,CAAGZ,QAAQ,CAAC,CAAC,CAAE;AAE1B,KAAM,CAAAa,aAAa,CAAGA,CAAA,GAAM,CAC1B;AACAJ,cAAc,CAAC,CAAC,CAAC,CACjBE,eAAe,CAAC,CAAC,CAAC,CAClB;AACA;AACA;AACF,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAIC,KAAK,EAAK,CAClCR,mBAAmB,CAACQ,KAAK,CAAC,CAC1BF,aAAa,CAAC,CAAC,CACjB,CAAC,CAED,mBACET,KAAA,QAAKY,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBf,IAAA,CAACH,QAAQ,EACPa,KAAK,CAAEA,KAAM,CACbN,gBAAgB,CAAEA,gBAAiB,CACnCQ,gBAAgB,CAAEA,gBAAkB;AAAA,CACrC,CAAC,cACFZ,IAAA,CAACJ,MAAM,EACLoB,WAAW,CAAEN,KAAK,CAACN,gBAAgB,CAAE,CACrCC,mBAAmB,CAAEA,mBAAoB,CACzCC,WAAW,CAAEA,WAAY,CACzBC,cAAc,CAAEA,cAAe,CAC/BC,YAAY,CAAEA,YAAa,CAC3BC,eAAe,CAAEA,eAAgB,CACjCC,KAAK,CAAEA,KAAM,CACd,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAP,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}