{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\Desktop\\\\javascript projects\\\\my-music-app\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport chillHop from \"../data\"; // Adjust this import based on your data file's location\nimport \"./Player.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [songProgress, setSongProgress] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n  const songs = chillHop();\n  const [remainingTime, setRemainingTime] = useState(0);\n  const onTimeUpdate = () => {\n    if (audioRef.current) {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      setCurrentTime(currentTime);\n      setRemainingTime(duration - currentTime);\n      setSongProgress(currentTime / duration * 100);\n    }\n  };\n  const onLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n    }\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const playNextSong = () => {\n    if (currentSongIndex < songs.length - 1) {\n      setCurrentSongIndex(currentSongIndex + 1);\n    } else {\n      setCurrentSongIndex(0);\n    }\n  };\n  const playPrevSong = () => {\n    if (currentSongIndex > 0) {\n      setCurrentSongIndex(currentSongIndex - 1);\n    } else {\n      setCurrentSongIndex(songs.length - 1);\n    }\n  };\n  useEffect(() => {\n    if (isPlaying && audioRef.current) {\n      audioRef.current.play();\n    } else if (!isPlaying && audioRef.current) {\n      audioRef.current.pause();\n    }\n  }, [isPlaying, currentSongIndex]);\n  function formatTime(seconds) {\n    return `${Math.floor(seconds / 60)}:${`0${Math.floor(seconds % 60)}`.slice(-2)}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-song\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: songs[currentSongIndex].cover,\n        alt: songs[currentSongIndex].name,\n        className: \"current-song-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"current-song-name\",\n        children: songs[currentSongIndex].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"current-song-artist\",\n        children: songs[currentSongIndex].artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playPrevSong,\n        className: \"control-button\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-step-backward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        className: \"control-button\",\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playNextSong,\n        className: \"control-button\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-step-forward\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          style: {\n            width: `${songProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-time\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(currentTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"-\", formatTime(remainingTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: songs[currentSongIndex].audio,\n      onLoadedMetadata: onLoadedMetadata,\n      onTimeUpdate: onTimeUpdate,\n      onEnded: playNextSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"rGLRe2Kpv7oESEh3v7BkWiCrv8w=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useRef","useEffect","chillHop","jsxDEV","_jsxDEV","Player","_s","isPlaying","setIsPlaying","currentSongIndex","setCurrentSongIndex","songProgress","setSongProgress","currentTime","setCurrentTime","duration","setDuration","audioRef","songs","remainingTime","setRemainingTime","onTimeUpdate","current","onLoadedMetadata","togglePlayPause","playNextSong","length","playPrevSong","play","pause","formatTime","seconds","Math","floor","slice","className","children","src","cover","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","artist","onClick","style","width","ref","audio","onEnded","_c","$RefreshReg$"],"sources":["C:/Users/felip/Desktop/javascript projects/my-music-app/src/components/Player.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport chillHop from \"../data\"; // Adjust this import based on your data file's location\r\nimport \"./Player.css\";\r\n\r\nconst Player = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const [songProgress, setSongProgress] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const audioRef = useRef(null);\r\n  const songs = chillHop();\r\n  const [remainingTime, setRemainingTime] = useState(0);\r\n\r\n  const onTimeUpdate = () => {\r\n    if (audioRef.current) {\r\n      const currentTime = audioRef.current.currentTime;\r\n      const duration = audioRef.current.duration;\r\n      setCurrentTime(currentTime);\r\n      setRemainingTime(duration - currentTime);\r\n      setSongProgress((currentTime / duration) * 100);\r\n    }\r\n  };\r\n\r\n  const onLoadedMetadata = () => {\r\n    if (audioRef.current) {\r\n      setDuration(audioRef.current.duration);\r\n    }\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const playNextSong = () => {\r\n    if (currentSongIndex < songs.length - 1) {\r\n      setCurrentSongIndex(currentSongIndex + 1);\r\n    } else {\r\n      setCurrentSongIndex(0);\r\n    }\r\n  };\r\n\r\n  const playPrevSong = () => {\r\n    if (currentSongIndex > 0) {\r\n      setCurrentSongIndex(currentSongIndex - 1);\r\n    } else {\r\n      setCurrentSongIndex(songs.length - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying && audioRef.current) {\r\n      audioRef.current.play();\r\n    } else if (!isPlaying && audioRef.current) {\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying, currentSongIndex]);\r\n\r\n  function formatTime(seconds) {\r\n    return `${Math.floor(seconds / 60)}:${`0${Math.floor(seconds % 60)}`.slice(\r\n      -2\r\n    )}`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"current-song\">\r\n        <img\r\n          src={songs[currentSongIndex].cover}\r\n          alt={songs[currentSongIndex].name}\r\n          className=\"current-song-cover\"\r\n        />\r\n        <h2 className=\"current-song-name\">{songs[currentSongIndex].name}</h2>\r\n        <h3 className=\"current-song-artist\">\r\n          {songs[currentSongIndex].artist}\r\n        </h3>\r\n      </div>\r\n      <div className=\"player-controls\">\r\n        <button onClick={playPrevSong} className=\"control-button\">\r\n          <i className=\"fas fa-step-backward\"></i>\r\n        </button>\r\n        <button onClick={togglePlayPause} className=\"control-button\">\r\n          {isPlaying ? (\r\n            <i className=\"fas fa-pause\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-play\"></i>\r\n          )}\r\n        </button>\r\n        <button onClick={playNextSong} className=\"control-button\">\r\n          <i className=\"fas fa-step-forward\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"progress-container\">\r\n        <div className=\"progress-bar\">\r\n          <div className=\"progress\" style={{ width: `${songProgress}%` }}></div>\r\n        </div>\r\n        <div className=\"progress-time\">\r\n          <span>{formatTime(currentTime)}</span>\r\n          <span>-{formatTime(remainingTime)}</span>\r\n        </div>\r\n      </div>\r\n      <audio\r\n        ref={audioRef}\r\n        src={songs[currentSongIndex].audio}\r\n        onLoadedMetadata={onLoadedMetadata}\r\n        onTimeUpdate={onTimeUpdate}\r\n        onEnded={playNextSong}\r\n      ></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}